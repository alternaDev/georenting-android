apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'testfairy'
apply plugin: 'com.github.triplet.play'
apply plugin: 'realm-android'

def vCode = 10000

try {
    vCode = Integer.valueOf(System.getenv("TRAVIS_BUILD_NUMBER"))
} catch (e) {
}

def vName = System.getenv("TRAVIS_TAG")

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()

if(!vName) {
    if(System.getenv("TRAVIS_COMMIT")) {
        vName = System.getenv("TRAVIS_COMMIT").substring(0, 10)
    } else {
        vName = gitSha + "-Dev"
    }
} else {
    vName = vName.replace("v", "")
}



def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    retrolambda {
        jvmArgs '-noverify'
    }

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = false
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        georenting {
            storeFile file("../keystore.jks")
            storePassword georentingKeystorePassword
            keyAlias "georenting"
            keyPassword georentingKeystorePassword
        }
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23

        versionCode vCode + 1000
        versionName "${vName}"
    }



    buildTypes {
        release {
            signingConfig signingConfigs.georenting
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.georenting
            applicationIdSuffix '.debug'
        }
    }

    productFlavors {
        internal {
            applicationId 'de.alternadev.georenting.internal'
        }
        production {
            applicationId 'de.alternadev.georenting'
        }
    }

    lintOptions {
        abortOnError false
        textReport true
        textOutput 'stdout'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testfairyConfig {
        apiKey testfairyKey
        autoUpdate true
        video "wifi"
        videoRate "0.5"
        videoQuality "low"
        maxDuration "15m"
        recordOnBackground true
        uploadProguardMapping true
        iconWatermark true
    }

    play {
        serviceAccountEmail = '807533877543-r2nl3jgumug06qauj00q9eallhnru6oi@developer.gserviceaccount.com'
        pk12File = file('../google.p12')
        track = 'beta'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:cardview-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'

    compile 'de.hdodenhof:circleimageview:2.0.0'

    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.2'
    compile 'io.reactivex:rxjava-async-util:0.21.0'

    compile 'com.jakewharton.timber:timber:4.1.2'

    compile 'com.jakewharton:process-phoenix:1.0.2'

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'com.squareup.retrofit2:retrofit:2.0.1'
    compile 'com.squareup.retrofit2:converter-gson:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.1'
    compile 'com.squareup.okhttp3:okhttp:3.2.0'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'

    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    compile 'com.uphyca:stetho_realm:0.8.0'

    compile 'com.google.dagger:dagger:2.2'
    apt 'com.google.dagger:dagger-compiler:2.2'

    compile 'com.jakewharton.byteunits:byteunits:0.9.1'

    compile 'com.google.android.gms:play-services-auth:8.4.0'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.google.android.gms:play-services-maps:8.4.0'
    compile 'com.google.android.gms:play-services-location:8.4.0'

    compile 'rebus:header-view:1.0.0'

    compile "org.parceler:parceler-api:1.1.0"
    apt "org.parceler:parceler:1.1.0"

    compile 'com.google.code.gson:gson:2.6.2'

    compile 'com.github.hotchemi:permissionsdispatcher:2.1.2'
    apt 'com.github.hotchemi:permissionsdispatcher-processor:2.1.2'
}

def installAll = tasks.create('installAll')
installAll.description = 'Install all applications.'
android.applicationVariants.all { variant ->
    installAll.dependsOn(variant.install)
    // Ensure we end up in the same group as the other install tasks.
    installAll.group = variant.install.group
}
apply plugin: 'com.google.gms.google-services'
